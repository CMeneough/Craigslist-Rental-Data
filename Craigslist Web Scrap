## Pull Rental Data from Craigslist (step 1)
from requests import get
from bs4 import BeautifulSoup
import numpy as np
from time import sleep
import pandas as pd


response = get('https://washingtondc.craigslist.org/search/apa?search_distance=10&postal=20008&availabilityMode=0&sale_date=all+dates')

soup = BeautifulSoup(response.text, 'html.parser')

apartments = soup.find_all('li',class_='result-row')

apartments[0].find('time',class_='result-date')['datetime'].split()[0]
apartments[0].find('a',class_='result-title hdrlnk').text
apartments[0].find('a',class_='result-title hdrlnk')['href']
apartments[0].find('span',class_='housing').text.split()[0]
apartments[0].find('span',class_='housing').text.split()[2]
apartments[0].find('span',class_='result-hood').text
apartments[0].find('span',class_='result-price').text

count = int(soup.find('span', class_= 'totalcount').text)
count = np.arange(0,count+1,120)

date = []
title = []
url = []
bedrooms = []
square_feet = []
neighborhood = []
rent = []

for number in count:
    response = get('https://washingtondc.craigslist.org/search/apa?availabilityMode=0&postal=20008&s='+str(number)+ '&search_distance=10')
    sleep(10)

    soup = BeautifulSoup(response.text, 'html.parser')

    apartments = soup.find_all('li', class_='result-row')

    for apartment in apartments:
        if (apartment.find('span',class_='result-hood') is not None and apartment.find('span',class_='housing') is not None):

            # Post Date
            apt_date = apartment.find('time',class_='result-date')['datetime'].split()[0]
            date.append(apt_date)

            # Title of Post
            title_apt = apartment.find('a',class_='result-title hdrlnk').text
            title.append(title_apt)

            # URL Address
            url_apt = apartment.find('a',class_='result-title hdrlnk')['href']
            url.append(url_apt)

            # Neighborhood
            neighborhood_apt = apartment.find('span',class_='result-hood').text
            neighborhood.append(neighborhood_apt)

            # Rental Price
            rent_apt = apartment.find('span',class_='result-price').text
            rent.append(rent_apt)

            if len(apartment.find('span',class_='housing').text.split()) > 2:

                # Bedrooms
                bedrooms_apt = apartment.find('span',class_='housing').text.split()[0]
                bedrooms.append(bedrooms_apt)

                # Square Feet
                square_feet_apt = apartment.find('span',class_='housing').text.split()[2]
                square_feet.append(square_feet_apt)

            else:
                bedrooms.append(np.nan)
                square_feet.append(np.nan)

        else:
            continue


# Convert Data Scrap into DataFrame

data = pd.DataFrame({'date':date,'description':title,'url':url,'bedrooms':bedrooms,'size':square_feet,'neighborhood':neighborhood,'rent':rent})

data.to_csv('Craigslist_Data')
